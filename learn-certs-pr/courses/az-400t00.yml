### YamlMime:Course
title: Designing and Implementing Microsoft DevOps solutions
metadata:
  title: 'Course AZ-400T00-A: Designing and Implementing Microsoft DevOps solutions'
  description: 'Course AZ-400T00-A: Designing and Implementing Microsoft DevOps solutions'
uid: course.az-400t00
courseNumber: 'AZ-400T00-A'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Planificar la transformación con objetivos y plazos compartidos
- skill: Seleccionar un proyecto e identificar las métricas del proyecto e Indicadores Clave de Desempeño (KPI's)
- skill: Crear un equipo y una estructura organizativa ágil
- skill: Diseñar una estrategia de integración de herramientas
- skill: Diseñar una estrategia de gestión de licencias (por ejemplo, para los usuarios de Azure DevOps y GitHub)
- skill: Diseñar una estrategia para el seguimiento integral desde los elementos de trabajo hasta el software de trabajo
- skill: Diseñar una estrategia de autenticación y acceso
- skill: Diseñar una estrategia para integrar los recursos en instalaciones y en cloud
- skill: Describir los beneficios de utilizar Source Control
- skill: Describir repositorios Azure y GitHub
- skill: Migrar de TFVC a Git
- skill: Gestionar calidad de códigos, incluyendo la deuda técnica SonarCloud, y otras soluciones de herramientas
- skill: Construir conocimiento organizacional sobre la calidad del código
- skill: Explicar cómo estructurar los repositorios Git
- skill: Describir flujos de trabajo de ramificación Git
- skill: Aprovechar las peticiones de colaboración y revisión de códigos
- skill: Aprovechar ganchos de Git para automatización
- skill: Usar Git para albergar fuente interna a través de la organización
- skill: Explicar el rol de Azure Pipelines y sus componentes
- skill: Configurar Agentes para su uso en Azure Pipelines
- skill: Explicar por qué la integración continua importa
- skill: Implementar la integración continua utilizando Azure Pipelines
- skill: Definir Ingeniería de Fiabilidad del Sitio
- skill: Diseñar procesos para medir la satisfacción del usuario final y analizar la valoración del usuario
- skill: Diseñar procesos para automatizar el análisis de aplicaciones
- skill: Gestionar alertas y reducir alertas sin sentido y no accionables
- skill: Llevar a cabo retrospectivas irreprochables y crear una cultura justa
- skill: Definir una estrategia de infraestructura y configuración y un conjunto de herramientas apropiadas para una infraestructura de aplicaciones y de pipelines para su lanzamiento
- skill: Implementar el cumplimiento y seguridad en la infraestructura de su aplicación
- skill: Describir los retos potenciales con la integración del software de código abierto
- skill: Inspeccionar los paquetes de software de código abierto para la seguridad y el cumplimiento de la licencia
- skill: Gestionar las políticas de seguridad y cumplimiento organizativo
- skill: Integrar escaneos de licencias y vulnerabilidad en pipelines de construcción y despliegue
- skill: Configurar pipelines de construcción para acceder a la seguridad de los paquetes y a calificaciones de licencias
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- devops-engineer
products:
- azure
- azure-devops
- azure-kubernetes-service
- azure-container-instances
- azure-automation
exams:
- uid: exam.az-400
summary: |-
  Este curso proporciona el conocimiento y las habilidades para diseñar e implementar procesos y prácticas de DevOps. Los estudiantes aprenderán cómo planificar DevOps, usar el control de origen, escalar Git para una empresa, consolidar artefactos, diseñar una estrategia de gestión de dependencias, administrar secretos, implementar una integración continua, implementar una estrategia de construcción de contenedores, diseñar una estrategia de lanzamiento, configurar un flujo de trabajo de gestión de lanzamiento, implementar un patrón de implementación y optimizar los mecanismos de realizar comentarios.
  
  #### Perfil de audiencia
  Estudiantes de este curso están interesados en diseñar e implementar procesos de DevOps o en aprobar el examen de certificación de Microsoft Azure DevOps Solutions.
prerequisitesSection: |-
  Alumnos exitosos tendrán un conocimiento y comprensión previos de&#58;
  - Conceptos de computación en cloud, incluyendo una comprensión de las implementaciones de PaaS, SaaS e IaaS.
  - Ambos, la administración Azure y el desarrollo Azure con experiencia probada en al menos una de estas áreas.
  - Control de versiones, desarrollode software Agile y principios básicos de desarrollo de software. Sería de ayuda tener experiencia en una organización que distribuya software.
  
  Si eres nuevo en Azure y en la computación cloud, considera uno de los siguientes recursos&#58;
  - Gratis online&#58; Azure Fundamentals (https://docs.microsoft.com/en-us/learn/paths/azure-fundamentals/)
  - Curso impartido por un instructor&#58; AZ-900&#58; Azure Fundamentals (https://docs.microsoft.com/en-us/learn/certifications/courses/az-900t01)
  
  Si eres nuevo en Azure Administration, considera la posibilidad de hacer&#58;
  - Gratis online&#58; Prerrequisitos para Azure Administrators (https://docs.microsoft.com/en-us/learn/paths/az-104-administrator-prerequisites/)
  - Cursos impartidos por un instructor&#58; AZ-104&#58; Microsoft Azure Administrator (https://docs.microsoft.com/en-us/learn/certifications/courses/az-104t00) y AZ-010&#58; Azure Administration for AWS SysOps (https://docs.microsoft.com/en-us/learn/certifications/courses/az-010t00)
  
  Si eres nuevo en Azure Developer, considera la posibilidad de hacer&#58;
  - Gratis online&#58; Crear aplicaciones sin servidor (https://docs.microsoft.com/en-us/learn/paths/create-serverless-applications/)
  - Curso impartido por un instructor&#58; AZ-204&#58; Developing Solutions for Microsoft Azure (https://docs.microsoft.com/en-us/learn/certifications/courses/az-204t00) y AZ-020&#58; Microsoft Azure Solutions for AWS Developers (https://docs.microsoft.com/en-us/learn/certifications/courses/az-020t00)
outlineSection: |-
  ### Module 1&#58; Planning for DevOps
  #### Lecciones
  - Planificación de la transformación
  - Selección de proyectos
  - Estructuras de equipos
  - Migración a Azure DevOps
  
  #### Laboratorio &#58; Planificación ágil y gestión de carteras con Azure Boards
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Planificar para la transformación con objetivos y plazos compartidos
  - Seleccionar un proyecto e identificar las métricas del proyecto e Indicadores Clave de Desempeño (KPI's)
  - Crear un equipo y estructura organizativa ágil
  - Diseñar una estrategia de integración de herramientas
  - Diseñar una estrategia de gestión de licencias (por ejemplo, para los usuarios de Azure DevOps y GitHub)
  - Diseñar una estrategia para la trazabilidad integral desde los elementos de trabajo hasta el software de trabajo
  - Diseñar una estrategia de autenticación y acceso
  - Diseñar una estrategia para integrar recursos en instalaciones y en cloud
  
  
  ### Módulo 2&#58; Empezando con Control de Fuentes
  #### Lección
  - ¿Qué es Control de Fuentes?
  - Beneficios del Control de Fuentes
  - Tipos de Sistemas de Control de Fuentes
  - Introducción a Azure Repos
  - Introducción a GitHub
  - Migrando de Team Foundation Version Control (TFVC) a Git en Azure Repos
  
  #### Laboratorio &#58; Controlar Versiones con Git en Azure Repos
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Describir los beneficios de usar Control de Fuentes 
  - Describir Azure Repos y GitHub
  - Migrar de TFVC a Git
  
  
  ### Módulo 3&#58; Gestionando Deuda Técnica
  #### Lecciones
  - Identificar Deuda Técnica
  - Intercambio de Conocimientos dentro de los Equipos
  - Modernización de Entornos de Desarrollo con Codespaces
  
  #### Laboratorio &#58; Compartir Conocimiento de Equipo usando Azure Project Wikis
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Gestionar Calidad de Códigos incluyendo Deuda Técnica SonarCloud, y otras soluciones de herramientas
  - Construir conocimiento organizacional sobre calidad del códigos
  
  
  ### Módulo 4&#58; Trabajar con Git para DevOps Empresarial
  #### Lecciones
  - Cómo estructurar su Git Repo
  - Flujos de trabajo de ramificación Git
  - Colaborar con las solicitudes de extracción en Azure Repos
  - ¿Por qué preocuparse por Git Hooks
  - Acojer Fuentes Internas
  - Gestionar repositorios Git
  
  #### Laboratorio &#58; Controlando Versiones con Git en Azure Repos
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Explica cómo estructurar repositorios Git
  - Describir flujos de trabajo de ramificación Git
  - Aprovechar las peticiones para colaborar y revisar códigos
  - Aprovechar Git hooks para automatizar
  - Usar Git para acoger fuente interna a través de la organización
  
  
  ### Módulo 5&#58; Configurando Azure Pipelines
  #### Lecciones
  - El concepto de Pipelines en DevOps
  - Azure Pipelines
  - Evaluar el uso de agentes hospedados versus auto hospedados
  - Agent Pools
  - Pipelines y Concurrencia
  - Azure DevOps y Proyectos de Código Abierto (Proyectos Públicos)
  - Azure Pipelines YAML versus Diseñador Visual
  
  #### Laboratorio &#58; Configurando Agent Pools y Entendiendo Estilos Pipeline
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Explicar el rol de Azure Pipelines y sus componentes
  - Configurar Agentes para su uso en Azure Pipelines
  
  
  ### Módulo 6&#58; Implementando Integración Continua usando Azure Pipelines
  #### Lecciones
  - Visión general de integración continua
  - Implementando una Estrategia de Construcción
  - Integración con Azure Pipelines 
  - Integrando Control de Fuente Externa con Azure Pipelines
  - Configurar Agentes Autohospedados
  
  #### Laboratorio &#58; Habilitar Integración Continua con Azure Pipelines
  
  #### Laboratorio &#58; Integrar Control de Fuente Externa con Azure Pipelines
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Explicar por qué importa la integración continua
  - Implementar integración continua utilizando Azure Pipelines
  
  
  ### Módulo 7&#58; Gestionando la Configuración y Secretos de Aplicaciones
  #### Lecciones
  - Introducción a Seguridad
  - Implementar un Proceso de Desarrollo Seguro
  - Repensando Datos de Configuración de Aplicaciones
  - Manejar Secretos, Tokens y Certificados
  - Integración con Sistemas de Gestión de Identidad
  - Implementación de Configuración de Aplicaciones
  
  #### Laboratorio &#58; Integrando Azure Key Vault con Azure DevOps
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Administrar configuración y secretos de aplicaciones
  - Integrar Azure Key Vault con un pipeline
  
  
  ### Módulo 8&#58; Implementando Integración Continua con Acciones GitHub
  #### Lecciones
  - Acciones GitHub
  - Integración Continua con Acciones GitHub
  - Asegurando Secretos para Acciones GitHub
  
  #### Laboratorio &#58; Acciones Integración Continua GitHub
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Crear y trabajar con GitHub Acciones y Flujos de Trabajo
  - Implementar integración continua con las acciones de GitHub
  
  
  ### Módulo 9&#58; Diseño e Implementación de una Estrategia de Gestión de Dependencia
  #### Lecciones
  - Dependencias de Empaquetado
  - Gestión de Paquetes
  - Migración y Consolidación de Artefactos
  - Seguridad de empaquetado
  - Implementación de una Estrategia de Versionado
  
  #### Laboratorio &#58; Gestión de paquetes con Azure Artifacts
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Recomendar herramientas y prácticas de gestión de artefactos
  - Paquetes comunes abstractos para permitir compartir y reutilizar
  - Migrar y consolidar artefactos
  - Migrar e integrar medidas de control de fuentes
  
  
  ### Módulo 10&#58; Diseñar una estrategia de liberación
  #### Lecciones
  - Introducción a Entrega Continua
  - Recomendaciones de estrategia de lanzamiento
  - Construyendo un pipeline de alta calidad de lanzamiento
  - Elección de la Herramienta de Gestión de Lanzamiento Correcta
  
  #### Laboratorio &#58; Control de los despliegues mediante puertas de lanzamiento
 
  #### Laboratorio &#58; Creando un tablero de lanzamiento
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Diferenciar entre un lanzamiento y un despliegue
  - Definir los componentes de un pipeline de lanzamiento
  - Explicar cosas a considerar cuando diseñes tu estrategia de lanzamiento
  - Clasificar un lanzamiento contra un proceso de lanzamiento, y describir cómo controlar la calidad de ambos
  - Describir el principio de puertas de lanzamiento y cómo tratar las notas de lanzamiento y documentación
  - Elegir una herramienta de gestión de lanzamiento
  
  
  ### Módulo 11&#58; Implementar el Despliegue Continuo utilizando Azure Pipelines
  #### Lecciones
  - Crear un pipeline de lanzamiento
  - Provisionar y Configurar Ambientes
  - Administrar y Modular Tareas y Plantillas
  - Configurar la Integración Automatizada y Automatización de Pruebas Funcionales
  - Automatizar Inspección de Salud
  
  #### Laboratorio &#58; Configurando Pipelines como Código con YAML
  
  #### Laboratorio &#58; Configurando y Ejecutando Pruebas Funcionales
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Explicar la terminología utilizada en Azure DevOps y otras herramientas de gestión de lanzamiento
  - Describir lo que es una tarea de construcción y lanzamiento, lo que puede hacer, y algunas tareas de despliegue disponibles
  - Explicar por qué a veces necesitas varios trabajos de lanzamiento en un proceso de lanzamiento
  - Diferenciar entre trabajo de lanzamiento de multi-agente y multi-configuración
  - Utilizar variables de lanzamiento y variables de etapa en su pipeline de lanzamiento
  - Desplegar en un ambiente seguro usando una conexión de servicio
  - Enumerar las diferentes formas de inspeccionar la salud de tu pipeline y lanzamiento usando alertas, hooks de servicio e informes
  
  
  ### Módulo 12&#58; Implementando un Patrón de Despliegue Apropiado
  #### Lecciones
  - Introducción a Patrones de Despliegue
  - Implementar Despliegue Azul-Verde
  - Caracterizar Toggles
  - Lanzamientos Canary
  - Lanzamiento Oscuro
  - Pruebas AB
  - Despliegue de Exposición Progresiva
  
  #### Laboratorio &#58; Gestión de banderas con LaunchDarkly y Azure DevOps
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Describir los patrones de despliegue
  - Implementar Despliegue Azul-Verde
  - Implementar Lanzamiento Canary
  - Implementar Despliegue de Exposición Progresiva
  
  ### Módulo 13&#58; Gestión de la Infraestructura y Configuración usando Herramientas Azure
  #### Lecciones
  - Infraestructura como Gestión de Código y Configuración
  - Crear Recursos Azure usando Plantillas ARM
  - Crear recursos Azure usando Azure CLI
  - Automatización Azure con DevOps
  - Configuración de Estado Deseado (DSC)
  
  #### Laboratorio &#58; Azure Despliegues utilizando Resource Manager Templates
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Aplicar infraestructura y configuración como principios de código
  - Desplegar y administrar infraestructura usando tecnologías de automatización Microsoft como plantillas ARM, PowerShell, y Azure CLI
  
  
  ### Módulo 14&#58; Infraestructura de Terceros como Herramientas de Código disponibles con Azure
  #### Lecciones
  - Chef
  - Puppet
  - Ansible
  - Terraform
  
  #### Laboratorio &#58; Automatizando Despliegues de Infraestructura en Cloud con Terraform y Azure Pipelines
  
  #### Laboratorio &#58; Desplegando aplicaciones con Chef en Azure
  
  #### Laboratorio &#58; Desplegar Aplicación con Puppet en Azure
  
  #### Laboratorio &#58; Ansible con Azure
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Desplegar y configurar infraestructura usando herramientas y servicios de terceros con Azure, tales como Chef, Puppet, Ansible y Terraform
  
  
  ### Módulo 15&#58; Gestión de Contenedores utilizando Docker
  #### Lecciones
  - Implementando una estrategia de construcción de contenedores
  - Implementando Construcciones Multi-Etapa Docker
  
  #### Laboratorio &#58; Modernizando Aplicaciones Existentes ASP.NET con Azure
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Implementar una estrategia de contenedores incluyendo cómo contenedores son diferentes de las máquinas virtuales y cómo los microservicios utilizan contenedores
  - Implementar contenedores utilizando Docker
  - Implementar construcciones multietapa Docker
  
  
  ### Módulo 16&#58; Creando y Gestionando Infraestructura de Servicios de Kubernetes
  #### Lecciones
  - Azure Kubernetes Service
  - Herramientas Kubernetes 
  - Integrando AKS con Pipelines
  
  #### Laboratorio &#58; Desplegando una Aplicación de Contenedores Múltiples a Azure Kubernetes Service
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Desplegar y configurar un cluster de Kubernetes administrado
  
  
  ### Módulo 17&#58; Implementando Reseñas para Equipos de Desarrollo
  #### Lecciones
  - Implementar herramientas para rastrear el uso del sistema, uso de características y flujo
  - Implementar Enrutamiento de Datos para el Informe de Caída de Aplicaciones Móviles
  - Desarrollar Tableros de Monitoreo y Estado
  - Integrar y Configurar Sistemas de Tickets
  
  #### Laboratorio &#58; Monitoreo de Rendimiento de Aplicaciones con Conocimiento de Aplicaciones
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Implementar herramientas para rastrear el uso del sistema, el uso de características y flujo
  - Configurar la integración del informe de accidentes para las aplicaciones cliente
  - Implementar el enrutamiento de datos del informe de fallos de aplicaciones de clientes
  - Desarrollar tableros de vigilancia y de estado
  - Integrar y configurar sistemas de tickets con la gestión de trabajo del equipo de desarrollo
  
  
  ### Módulo 18&#58; Implementando Mecanismos de Retroalimentación del Sistema
  #### Lecciones
  - Ingeniería de Fiabilidad del Sitio
  - Prácticas de Diseño para Medir la Satisfacción del Usuario Final
  - Diseñar Procesos para Capturar y Analizar las Reseñas de Usuarios
  - Procesos de diseño para automatizar el análisis de aplicaciones
  - Gestión de Alertas
  - Retrospectivas Irreprochables y una Cultura Justa
  
  #### Laboratotio &#58; Integración entre Azure DevOps y Teams
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Definir Ingeniería de Fiabilidad del Sitio
  - Diseñar procesos para medir la satisfacción del usuario final y analizar la Reseñas de usuarios
  - Diseñar procesos para automatizar análisis de aplicaciones
  - Gestionar alertas y reducir las alertas sin sentido y no accionables
  - Llevar a cabo retrospectivas irreprochables y crear una cultura justa
  
  
  ### Módulo 19&#58; Implementación de Seguridad en Proyectos DevOps
  #### Lecciones
  - La seguridad en pipelines
  - Azure Security Center
  
  #### Laboratorio &#58; Implementar Seguridad y Cumplimiento en un Azure DevOps Pipeline
  
  Después de completar este módulo, los estudiantes serán capaces de&#58;
  - Definir una estrategia de infraestructura y configuración y un conjunto de herramientas apropiadas para una infraestructura de aplicaciones y de pipeline de lanzamiento
  - Implementar cumplimiento y seguridad en la infraestructura de tu aplicación
  
  
  ### Módulo 20&#58; Validación de Bases del Código para Cumplimiento
  #### Lessons
  - Software de código abierto
  - Gestionando Políticas de Seguridad y Cumplimiento
  - Integrando Licencia y Escaneos de Vulnerabilidad
  
  #### Laboratorio &#58; Gestionando Deuda Técnica con SonarQube y Azure DevOps
  
  After completing this module, students will be able to&#58;
  - Describir los posibles desafíos de integración del software de código abierto
  - Inspeccionar los paquetes de software de código abierto para seguridad y cumplimiento de licencia
  - Gestionar políticas de seguridad organizativa y de cumplimiento
  - Integrar las exploraciones de licencias y vulnerabilidades en la construcción y despliegue de pipelines
  - Configurar la construcción de pipelines para acceder a la seguridad de paquetes y clasificaciones de licencias